Parameters:
  LambdaS3Bucket:
    Type: String
    Default: inspector-remediation-lambda-487210557724
    MinLength: 1
    MaxLength: 80
    Description: |
      Prefix that is used for the created resources (20 chars, a-z and 0-9 only)
  InspectorSNSLambdaPath:
    Type: String
    Default: Lambda/inspectorsnslambda.zip
    ConstraintDescription: '[A-Za-z0-9\-]+/'
    Description: |
      S3 Key for InspectorSNSLambda zip file.
  InspectorRemediationLambdaPath:
    Type: String
    Default: Lambda/inspectorremediationlambda.zip
    ConstraintDescription: '[A-Za-z0-9\-]+/'
    Description: |
      S3 Key for InspectorRemediationLambda zip file.
Mappings:
  RulesPackageArn:
    us-east-1:
      CVE: 'arn:aws:inspector:us-east-1:316112463485:rulespackage/0-gEjTy7T7'
    us-east-2:
      CVE: 'arn:aws:inspector:us-east-2:646659390643:rulespackage/0-JnA8Zp85'
    us-west-1:
      CVE: 'arn:aws:inspector:us-west-1:166987590008:rulespackage/0-TKgzoVOa'
    ap-southeast-2:
      CVE: 'arn:aws:inspector:ap-southeast-2:454640832652:rulespackage/0-D5TGAxiR'

  TargetAMI:
    us-east-1:
      EC2: 'ami-00dc79254d0461090'
    us-east-2:
      EC2: 'ami-00bf61217e296b409'
    us-west-1:
      EC2: 'ami-024c80694b5b3e51a'
    ap-southeast-2:
      EC2: 'ami-08a74056dfd30c986'

Resources:

  SNSInspectorTopic:
    Type: 'AWS::SNS::Topic'
    Properties:
      DisplayName: SNSInspectorTopic
      TopicName: SNSInspectorTopic


  InspectorFullAccessManagedPolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowInspectorFullAccess
            Effect: Allow
            Action:
              - 'inspector:*'
            Resource: '*'
  InspectorLambdaExecutionRoleCF:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonSSMFullAccess'
        - 'arn:aws:iam::aws:policy/IAMReadOnlyAccess'
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
        - !Ref InspectorFullAccessManagedPolicy
  InspectorSNSLambda:
    Type: 'AWS::Lambda::Function'
    Properties:
      FunctionName: InspectorSNSLambda
      MemorySize: 128
      Role: !GetAtt InspectorLambdaExecutionRoleCF.Arn
      Handler: index.lambda_handler
      Code:
        S3Bucket: !Ref LambdaS3Bucket
        S3Key: !Ref InspectorSNSLambdaPath
      Runtime: python2.7
      Timeout: 300
      Environment:
        Variables:
          PROD_SNS_TOPIC: !Ref SNSInspectorTopic
  InspectorRemediationLambda:
    Type: 'AWS::Lambda::Function'
    Properties:
      FunctionName: InspectorRemediationLambda
      MemorySize: 128
      Role: !GetAtt InspectorLambdaExecutionRoleCF.Arn
      Handler: index.lambda_handler
      Code:
        S3Bucket: !Ref LambdaS3Bucket
        S3Key: !Ref InspectorRemediationLambdaPath
      Runtime: python2.7
      Timeout: 300
      Environment:
        Variables:
          PROD_SNS_TOPIC: !Ref SNSInspectorTopic
  SNSInspectorSubscription:
    Type: 'AWS::SNS::Subscription'
    DependsOn: SNSInspectorTopic
    Properties:
      Protocol: lambda
      Endpoint: !GetAtt InspectorRemediationLambda.Arn
      TopicArn: !Ref SNSInspectorTopic
  SNSEmailSubscription:
    Type: 'AWS::SNS::Subscription'
    DependsOn: SNSInspectorTopic
    Properties:
      Protocol: email
      Endpoint: kanishk.mahajan@accenture.com
      TopicArn: !Ref SNSInspectorTopic
  InspectorResourceGroup:
    Type: 'AWS::Inspector::ResourceGroup'
    Properties:
      ResourceGroupTags:
        - Key: Environment
          Value: Development
  InspectorTarget:
    Type: 'AWS::Inspector::AssessmentTarget'
    Properties:
      AssessmentTargetName: DemoAssessment
      ResourceGroupArn: !GetAtt InspectorResourceGroup.Arn
  InspectorTemplate:
    Type: 'AWS::Inspector::AssessmentTemplate'
    Properties:
      AssessmentTargetArn: !GetAtt InspectorTarget.Arn
      AssessmentTemplateName: DemoAssessment Template
      DurationInSeconds: 900
      RulesPackageArns: 
        - 'arn:aws:inspector:ap-southeast-2:454640832652:rulespackage/0-D5TGAxiR'
      
  SecurityHubFindingsRule:
    Type: 'AWS::Events::Rule'
    Properties:
      Name: SecurityHubFindingsRule
      EventPattern:
        source:
          - aws.securityhub
        detail-type:
          - Security Hub Findings - Imported
      State: ENABLED
      Targets:
        - Id: SNSInspectorLambda_V1
          Arn: !GetAtt InspectorSNSLambda.Arn
  EC2SSMRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM'
  DummyInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      InstanceProfileName: EC2InstanceProfile
      Roles:
        - !Ref EC2SSMRole
  DummyInstance:
    Type: 'AWS::EC2::Instance'
    Properties:
      ImageId: !FindInMap 
        - TargetAMI
        - !Ref 'AWS::Region'
        - EC2
      Tags:
        - Key: Environment
          Value: Development
      InstanceType: t2.micro
      IamInstanceProfile: !Ref DummyInstanceProfile
      UserData: !Base64 |
        #!/bin/bash
        curl -O https://inspector-agent.amazonaws.com/linux/latest/install
        bash install

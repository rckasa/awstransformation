---
AWSTemplateFormatVersion: '2010-09-09'
Description: Transit Gateway Attachments for VPC in member accounts 

# ---------------------------------------------------------------------------------------------------------------
# CloudFormation Template 2 of 2
# Provides automation for set up of a Transit Gateway VPC attachment
# Leverages Secure VPC template
#
# @author Kanishk Mahajan
# ----------------------------------------------------------------------------------------------------------------

Parameters: 
  RemoteNetworkCidr:
    Description: CIDR for a Remote VPN to connect to via TransitGateway
    Type: String
    MinLength: '7'
    MaxLength: '24'
    Default: 10.255.0.0/16
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: Must be a valid CIDR range of the form x.x.x.x/x.
  VPC3SubnetCidr:
    Description: CIDR for a Remote VPC to connect to via TransitGateway
    Type: String
    MinLength: '7'
    MaxLength: '24'
    Default: 10.33.0.0/20
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: Must be a valid CIDR range of the form x.x.x.x/x.
  TransitGatewayId:
    Description: TransitGateway ID
    Type: String
  KeyName:
    Description: EC2 Key Pair. FOR DEMO INSTANCE ONLY
    Type: "AWS::EC2::KeyPair::KeyName"

Mappings:
  RegionMap:
    us-west-2:
      "AMALINUX" : "ami-0e8c04af2729ff1bb" 
    us-east-2:
      "AMALINUX" : "ami-0e01ce4ee18447327" 
    us-east-1:
      "AMALINUX" : "ami-0323c3dd2da7fb37d" 
    us-west-1:
      "AMALINUX" : "ami-06fcc1f0bc2c8943f" 

Resources:
  
# -----------------------------------------------------------------------------------------------------------------------
# AWS Transit Gateway VPC Attachment set up and Route Table Propagation
# .......................................................................................................................
 
  TransitGatewayAttachmentVPC:
    Type: AWS::EC2::TransitGatewayAttachment
    Properties:
      SubnetIds:
      - !ImportValue subnetvpc1A1
      TransitGatewayId: !Ref TransitGatewayId
      VpcId: !ImportValue vpc1id
      
  VPCVPNRoute:
    Type: AWS::EC2::Route
    DependsOn: 
    - TransitGatewayAttachmentVPC
    Properties:
      RouteTableId: !ImportValue routetablesubnetvpc1
      DestinationCidrBlock: 
        Ref: RemoteNetworkCidr
      TransitGatewayId: !Ref TransitGatewayId

  VPC3Route:
    Type: AWS::EC2::Route
    DependsOn: 
    - TransitGatewayAttachmentVPC
    Properties:
      RouteTableId: !ImportValue routetablesubnetvpc1
      DestinationCidrBlock: 
        Ref: VPC3SubnetCidr
      TransitGatewayId: !Ref TransitGatewayId

# -----------------------------------------------------------------------------------------------------------------------
# Demo Set up
# Provisions EC2 instances in the relevant subnets for shared VPC  with ssh and icmp access
# Demonstrates private network connectivity between shared VPC and Transit Gateway. In this case, allows VPN access 
# to this EC2 via Transit Gateway
# .......................................................................................................................

  EC2VPC1: 
    Type: "AWS::EC2::Instance"
    DependsOn: SGEC2VPC1
    Properties:
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", AMALINUX] # Dynamic mapping + Pseudo Parameter
      InstanceType: t2.micro
      KeyName: !Ref KeyName
      NetworkInterfaces: 
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          GroupSet: 
            - Ref: SGEC2VPC1
          SubnetId: !ImportValue subnetvpc1A1

  SGEC2VPC1:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: !Join ["", ["Stack", "-", !Ref "AWS::StackId", "-", "VPC1"]]
      VpcId: !ImportValue vpc1id
      SecurityGroupIngress:
        -
          CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          ToPort: 22
          FromPort: 22
        -
          CidrIp: 0.0.0.0/0
          IpProtocol: icmp
          ToPort: "-1"
          FromPort: "-1"
      SecurityGroupEgress:
        -
          CidrIp: 0.0.0.0/0
          ToPort: "-1"
          IpProtocol: "-1"
